/*
 * This file is generated by jOOQ.
*/
package lu.btsi.bragi.ros.models.pojos;


import java8.util.stream.StreamSupport;
import org.jooq.types.UInteger;

import javax.annotation.Generated;
import java.io.Serializable;
import java.sql.Timestamp;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Allergen implements Serializable {

    private static final long serialVersionUID = 2104617649;

    private UInteger  id;
    private Timestamp createdAt;
    private Timestamp updatedAt;
    private List<AllergenLocalized> allergenLocalized;

    public Allergen() {}

    public Allergen(Allergen value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public Allergen(
        UInteger  id,
        Timestamp createdAt,
        Timestamp updatedAt
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    public UInteger getId() {
        return this.id;
    }

    public void setId(UInteger id) {
        this.id = id;
    }

    public Timestamp getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Timestamp createdAt) {
        this.createdAt = createdAt;
    }

    public Timestamp getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Timestamp updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public String toString() {
        return "N\u00b0 " + id;
    }

    public void setAllergenLocalized(List<AllergenLocalized> allergenLocalized) {
        this.allergenLocalized = allergenLocalized;
    }

    public List<AllergenLocalized> getAllergenLocalized() {
        return allergenLocalized;
    }

    public AllergenLocalized getAllergenLocalized(Language language) {
        return StreamSupport.stream(allergenLocalized)
                .filter(aL -> aL.getLanguageCode().equals(language.getCode()))
                .findFirst()
                .get();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Allergen allergen = (Allergen) o;

        if (id != null ? !id.equals(allergen.id) : allergen.id != null) return false;

        return true;
    }

    @Override
    public int hashCode() {
        return id != null ? id.hashCode() : 0;
    }
}
